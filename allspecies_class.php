<?php

// Class that generates species list HTML

class Allspecies {

  var $gridArr = Array();
  var $speciesArr = Array();
  var $imagesArr = Array();

  var $speciesHtmlArr = Array();
  var $gridSpeciesCountArr = Array();
  var $gridSpeciesEndangeredArr = Array();

  var $grid;

  function __construct()
  {
    // Get parameters
    $grid = $_GET['grid'];
    $gridCoord = explode(":", $grid);

    $n = substr($gridCoord[0], 0, 3);
    $e = substr($gridCoord[1], 0, 3);

    // Security: coerce to int
    $n = (int) $n;
    $e = (int) $e;

    $this->grid = $n . ":" . $e;

    // Get data
    $this->gridArr = $this->getJsonData("griddata/" . $n . $e . ".json");
    if ($this->gridArr == FALSE)
    {
      $this->outsideFinland();
    }

    $this->speciesArr = $this->getJsonData("speciesdata-autogenerated.json");
    $this->imagesArr = $this->getJsonData("images/speciesimagedata-autogenerated.json");

    // Go through species on the grid
    foreach ($this->gridArr['species'] as $abbr => $singleSpeciesArr)
    {
      $withImage = TRUE;
      $this->generateSingleSpeciesHtml($abbr, $withImage);
    }
  }

  function outsideFinland()
  {
    echo "<p>Näyttää että olet Suomen ulkopuolella.</p>";
    exit();
  }

  // Gets a JSON datafile and decodes it
  function getJsonData($jsonFilename)
  {
    if (! file_exists($jsonFilename))
    {
      return FALSE;
    }

    $json = file_get_contents($jsonFilename);
    $dataArr = json_decode($json, TRUE);

    //  print_r ($dataArr); // debug

    return $dataArr;
  }

  function getMetaHtml()
  {
    $speciesTotal = $this->gridSpeciesCountArr[2] + $this->gridSpeciesCountArr[3] + $this->gridSpeciesCountArr[4];
    $endangeredTotal = @$this->gridSpeciesEndangeredArr['VU'] + @$this->gridSpeciesEndangeredArr['EN'] + @$this->gridSpeciesEndangeredArr['CR'];

    switch ($this->gridArr['grid']['activityCategory']) {
      case 5:
        $activityCategoryName = "erinomaisesti";
        break;
      case 4:
        $activityCategoryName = "hyvin";
        break;
      case 3:
        $activityCategoryName = "tyydyttävästi";
        break;
      case 2:
        $activityCategoryName = "välttävästi";
        break;      
      default:
        $activityCategoryName = "huonosti"; // = satunnaishavaintoja
        break;
    }
    $activityCategory =

    $localHtml = "<p>Olet nyt lintulaskenta-alueella nimeltään \"" . $this->gridArr['grid']['kunta'] . ", " . $this->gridArr['grid']['ruudunNimi'] . "\". Tällä sadan neliökilometrin alueella <strong>pesii " . $this->gridSpeciesCountArr[4] . "-" . $speciesTotal . " lintulajia</strong>, joista <strong>" . $endangeredTotal . " on uhanalaisia</strong>. Alueen linnusto tunnetaan <strong>" . $activityCategoryName . "</strong>. <span class='additional'>(ruutu " . $this->grid . ")</span></p>";

//    echo "<pre>";    print_r($this->gridArr['grid']);    echo "</pre>"; // debug

    return $localHtml;
  }

  // Returns a HTML species list for given PV-luokka
  function getSpeciesHtmlForPV($pvluokka)
  {
    if (isset($this->speciesHtmlArr[$pvluokka]))
    {
      return $this->speciesHtmlArr[$pvluokka];
    }
    else
    {
      return "<span class='nospecies'>Ei lajeja</span>";
    }
  }

  // Generates HTML for a species, stores into an array
  function generateSingleSpeciesHtml($abbr, $withImage = TRUE)
  {
    $localHtml = "";

    // If not in species list (= rare species that are not breeding)
    if (! isset($this->speciesArr[$abbr]))
    {
      return "\n<!-- No speciesdata for $abbr -->\n\n";
    }

    $fi = $this->speciesArr[$abbr]['fi'];
    $sci = $this->speciesArr[$abbr]['sci'];
    $pvluokka = $this->gridArr['species'][$abbr]['pvluokka'];

    $localHtml .= "<div class='species' id='$abbr'>\n";
    if ($withImage)
    {
      $localHtml .= $this->getImageHtml($abbr, $sci);
    }
    $localHtml .= $this->getIconsHtml($abbr);
    $localHtml .= "  <h4 id='h4$abbr'><a href='singlespecies.php?abbr=$abbr' class='ajax-modal' rel='modal:open'>$fi</a></h4>\n";
    $localHtml .= "</div>\n\n";

    @$this->speciesHtmlArr[$pvluokka] .= $localHtml;
    @$this->gridSpeciesCountArr[$pvluokka]++;
    @$this->gridSpeciesEndangeredArr[$this->speciesArr[$abbr]['uhex']['luokka2015']]++;
  }

  // Returns image HTML for a species
  function getImageHtml($abbr, $sci)
  {
    // Return image only for species with large enough pvluokka
    /*
    if ($this->gridArr['species'][$abbr]['pvluokka'] < 3)
    {
      return "<!--  Not image for this species -->\n";
    }
    else
    */
    {
      $imageUrl = "images/species/200/" . $sci . ".jpg";
      return "  <span class='speciesImage'><a href='singlespecies.php?abbr=$abbr' class='ajax-modal' rel='modal:open'><img src='$imageUrl' alt='' /></a></span>\n";
    }
  }

  // Gets icon image HTML for a species
  function getIconsHtml($abbr)
  {
    $localHtml = "";

    if ($this->speciesArr[$abbr]['atlas']['paritKaJarjestys'] > 180)
    {
      $localHtml .= "  <img src='images/star-green.png' alt='harvalukuinen' title='harvalukuinen' class='icon greenstar'>\n";
    }
    if ($this->speciesArr[$abbr]['atlas']['ruudutYhtJarjestys'] > 180)
    {
      $localHtml .= "  <img src='images/star-blue.png' alt='harvinainen' title='harvinainen' class='icon bluestar'>\n";
    }

    if (@$this->speciesArr[$abbr]['uhex']['luokka2015'] == "CR")
    {
      $localHtml .= "  <img src='images/cr.png' alt='äärimmäisen uhanalainen' title='äärimmäisen uhanalainen' class='icon cr'>\n";
    }
    elseif (@$this->speciesArr[$abbr]['uhex']['luokka2015'] == "EN")
    {
      $localHtml .= "  <img src='images/en.png' alt='erittäin uhanalainen' title='erittäin uhanalainen' class='icon en'>\n";
    }
    elseif (@$this->speciesArr[$abbr]['uhex']['luokka2015'] == "VU")
    {
      $localHtml .= "  <img src='images/vu.png' alt='vaarantunut' title='vaarantunut' class='icon vu'>\n";
    }

    return $localHtml;
  }


} // end of class
